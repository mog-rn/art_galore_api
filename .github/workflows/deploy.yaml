name: Deploy to Development Environment (Cloud Run)

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GCP_REGION }}
  SERVICE: ${{ secrets.SERVICE_NAME }}
  REGION: ${{ secrets.GCP_REGION }}

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Ensure GAR Repository Exists
        run: |
          if ! gcloud artifacts repositories describe ${{ secrets.GAR_REPOSITORY_NAME }} --location=${{ secrets.GCP_REGION }} --format='value(name)'; then
            gcloud artifacts repositories create ${{ secrets.GAR_REPOSITORY_NAME }} \
              --project=${{ secrets.GCP_PROJECT_ID }} \
              --repository-format=docker \
              --location=${{ secrets.GCP_REGION }} \
              --description="Docker repository"
          else
            echo "Repository ${{ secrets.GAR_REPOSITORY_NAME }} already exists."
          fi

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Docker image
        run: |
          docker build --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.SERVICE_NAME }}:$GITHUB_SHA .
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.SERVICE_NAME }}:$GITHUB_SHA

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.SERVICE_NAME }} \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY_NAME }}/${{ secrets.SERVICE_NAME }}:$GITHUB_SHA \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated
